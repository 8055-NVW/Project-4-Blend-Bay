"""
Django settings for finalproject project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

<<<<<<< HEAD

# For Deployment
import os




from pathlib import Path

import environ
# Initialise environment variables
env = environ.Env()
environ.Env.read_env()





=======
from pathlib import Path

>>>>>>> 0f82a3b33801132971e8c7e6c9ea4bd5fe687085
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-b*=j$57&v_cuyi4up!0*q04%j(e3-f8q)hri(g)foxwy347ou3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

<<<<<<< HEAD
ALLOWED_HOSTS = ['localhost', '127.0.0.1']

# settings.py
# CSRF_TRUSTED_ORIGINS = [
#     'http://localhost:5173',
#     'http://localhost/',
#     'http://127.0.0.1:5173',
# ]



# Application definition
=======
ALLOWED_HOSTS = []


# Application definition

>>>>>>> 0f82a3b33801132971e8c7e6c9ea4bd5fe687085
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
<<<<<<< HEAD
    'django.contrib.sites',
    'rest_framework',
    'rest_framework_simplejwt',
    'shakes',
    'users',
    'reviews',
    'categories',
    # 'corsheaders',
    #For Google OAUTH
    'rest_framework.authtoken',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'corsheaders'
]



###Google OAUTH
SITE_ID = 7

AUTHENTICATION_BACKENDS = [
  'django.contrib.auth.backends.ModelBackend',
  'allauth.account.auth_backends.AuthenticationBackend',
]


# SOCIALACCOUNT_PROVIDERS = {
#     'google': {
#         'APP': {
#             'client_id': env('GOOGLE_CLIENT_ID'),
#             'secret': env('GOOGLE_CLIENT_SECRET'),
#             'key': ''
#         }
#     }
# }

LOGIN_REDIRECT_URL = '/'

ACCOUNT_EMAIL_REQUIRED = True

CSRF_TRUSTED_ORIGINS = [
    'http://127.0.0.1:8000',
    'http://localhost:8000',
    'http://localhost:5173'
]

CORS_ORIGIN_WHITELIST = [
    'http://localhost:8000',
    'http://localhost:5173'
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "http://localhost"
]

CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
)


CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
###Google OAUTH
=======
    'rest_framework',
    'rest_framework_simplejwt',
    # 'cloudinary',
    # 'cloudinary_storage',
    'shakes',
    'users',
    'reviews',
    'categories'
]

#Cloudinary 
CLOUDINARY_STORAGE = {
    'CLOUD_NAME': 'drdpt4mru',
    'API_KEY': '383842631678643',
    'API_SECRET': 'mM4d6S8_hhXE-7pdGMMTFuHupsM'
} 


>>>>>>> 0f82a3b33801132971e8c7e6c9ea4bd5fe687085

# To get a UserToken JWT
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

from datetime import timedelta

# Token Validity
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=1)
}

<<<<<<< HEAD


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
=======
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
>>>>>>> 0f82a3b33801132971e8c7e6c9ea4bd5fe687085
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
<<<<<<< HEAD
    # OAUTH
    'allauth.account.middleware.AccountMiddleware'
]

ROOT_URLCONF = 'finalproject.urls'
# OLD
# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'client')] #Look, we have added the root folder of frontend here
        ,
=======
]

ROOT_URLCONF = 'finalproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
>>>>>>> 0f82a3b33801132971e8c7e6c9ea4bd5fe687085
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

<<<<<<< HEAD

=======
>>>>>>> 0f82a3b33801132971e8c7e6c9ea4bd5fe687085
WSGI_APPLICATION = 'finalproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
<<<<<<< HEAD
        'NAME': 'project-4-shakes',
=======
        'NAME': 'project-4',
>>>>>>> 0f82a3b33801132971e8c7e6c9ea4bd5fe687085
        'USER': 'vivlop',
        'PASSWORD': '8055',
        'HOST': 'localhost',
        'PORT': 5432
    }
}

AUTH_USER_MODEL = 'users.User'

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
<<<<<<< HEAD
STATIC_ROOT = 'static/'
=======
>>>>>>> 0f82a3b33801132971e8c7e6c9ea4bd5fe687085

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
<<<<<<< HEAD

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'client', "dist"),
)

=======
>>>>>>> 0f82a3b33801132971e8c7e6c9ea4bd5fe687085
